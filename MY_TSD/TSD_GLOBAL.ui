from pysimplebase import SimpleBase
import json

#from ru.travelfood.simple_ui import NoSQL as noClass
from java import jclass
import uuid
import requests
from requests import post
from requests.auth import HTTPBasicAuth

#https://api.github.com/repos/AlPolyak/TSD/contents/MY_TSD/TSD_GLOBAL.ui
# Функция запускается при старте программы ищет и устанавливает ID
def init_on_start(hashMap,_files=None,_data=None):
    noClass = jclass("ru.travelfood.simple_ui.NoSQL")
    db = noClass("dbtsd")
    result = db.get("idtsd")
    if not result:
        _idtsd=str(uuid.uuid4())
        db.put("idtsd",_idtsd,True)
        hashMap.put("_idtsd",_idtsd)
    else:
        hashMap.put("_idtsd",result)
    result = db.get("nametsd")
    if not result:
        _nametsd="ТСД 1"
        db.put("nametsd",_nametsd,True)
        hashMap.put("_nametsd",_nametsd)
    else:
        hashMap.put("_nametsd",result)
    hashMap.put("_IP",str(db.get("IP")))
    hashMap.put("_login1c",str(db.get("login1c")))
    hashMap.put("_password1c",str(db.get("password1c")))
    return hashMap

# Функция запускается при вводе имени тсд
def set_name_tsd(hashMap,_files=None,_data=None):
    noClass = jclass("ru.travelfood.simple_ui.NoSQL")
    db = noClass("dbtsd")
    listener=hashMap.get("listener")
    if listener == "ntsd":
        ntsd=hashMap.get("ntsd")
        db.put("nametsd",ntsd,True)
        hashMap.put("_nametsd",ntsd)
    elif listener == "IP_field":
        IP=hashMap.get(listener)
        db.put("IP",IP,True)
        hashMap.put("_IP",IP)
    elif listener == "login1c_field":
        login1c=hashMap.get(listener)
        db.put("login1c",login1c,True)
        hashMap.put("_login1c",login1c)
    elif listener == "password1c_field":
        password1c=hashMap.get(listener)
        db.put("password1c",password1c,True)
        hashMap.put("_password1c",password1c)
    elif listener == "btn_back_set": 
        hashMap.put("BackScreen","")
    return hashMap

# Функция подключение к http сервису 1С
def connect(hashMap,_files=None,_data=None):
    noClass = jclass("ru.travelfood.simple_ui.NoSQL")
    db = noClass("dbtsd")
    IP = db.get("IP")
    if IP==None:
        hashMap.put("toast","Не задан IP http сервиса")
        return hashMap
    url = 'http://'+IP+'/UNF/hs/simpleuiTSD/set_input_direct/Подключение'
    url = url.encode('UTF-8')
    login1c = db.get("login1c")
    if login1c==None:
        hashMap.put("toast","Не задан Login http сервиса")
        return hashMap
    password1c = str(db.get("password1c"))
    auth = HTTPBasicAuth(login1c.encode('UTF-8'), password1c.encode('UTF-8'))
    conv={}
    conv.update({'_idtsd':hashMap.get('_idtsd'),'_nametsd':hashMap.get('_nametsd').encode('UTF-8')})
    ret=post(url, json=conv, auth=auth, headers={'content-type': 'application/json; charset=utf-8'}, timeout=100)
    ret.encoding = 'UTF-8'
    if ret.status_code == 200:
        try:
            newhashMap=ret.json()
            hashMap.put("toast",ret.text)    
        except Exception as er:
            hashMap.put("toast",ret.text +' '+ er)    
#        for key, value in newhashMap.items():
#           hashMap.update({key, value})
        hashMap.put("_status_connect","Подключено")
    elif ret.status_code == 401:
        hashMap.put("toast","Не корректный логин или пароль")
        hashMap.put("_status_connect","Отключено")
    else : 
        hashMap.put("toast","Ошибка подключения к http сервису 1С: "+ret.status_code)
        hashMap.put("_status_connect","Отключено")
    return hashMap

# Функция выбор операции
def type_of_operation(hashMap,_files=None,_data=None):
    noClass = jclass("ru.travelfood.simple_ui.NoSQL")
    db = noClass("dbtsd")
    listener=hashMap.get("listener")
    if listener in ["btn_get","btn_put","btn_inv"]:
        db.put("typeofoperation",listener,True)
        hashMap.put("_typeofoperation",listener)
#        hashMap.put("noRefresh","");
        hashMap.put("ShowScreen","Выбор документа")
    elif listener=="btn_ret":
        db.put("typeofoperation","",True)
        hashMap.put("_typeofoperation","")
        hashMap.put("BackScreen","")
    return hashMap

#Функция получения номенклатуры по ШК из накладной
def GetProduct(hashMap,_files=None,_data=None):
    noClass = jclass("ru.travelfood.simple_ui.NoSQL")
    db = noClass("dbtsd")
    listener=hashMap.get("listener")
    if listener in ["btn_get","btn_put","btn_inv"]:
        db.put("typeofoperation",listener,True)
        hashMap.put("_typeofoperation",listener)
        hashMap.put("ShowScreen","Выбор документа")
    elif listener=="btn_ret":
        db.put("typeofoperation","",True)
        hashMap.put("_typeofoperation","")
        hashMap.put("BackScreen","")
    return hashMap

